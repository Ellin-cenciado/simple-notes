
services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: notes-mysql
    environment:
      MYSQL_DATABASE: notesdb
      MYSQL_USER: notesuser
      MYSQL_PASSWORD: password123
      MYSQL_ROOT_PASSWORD: rootpassword
    ports:
      - "3307:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - notes-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 5s
      retries: 10

  # Backend Spring Boot Application
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: notes-backend
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/notesdb
      SPRING_DATASOURCE_USERNAME: notesuser
      SPRING_DATASOURCE_PASSWORD: password123
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_DATABASE_PLATFORM: org.hibernate.dialect.MySQL8Dialect
    ports:
      - "8080:8080"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - notes-network
    restart: unless-stopped

  # Frontend Next.js Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: notes-frontend
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8081/api/notes
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - notes-network
    restart: unless-stopped

networks:
  notes-network:
    driver: bridge

volumes:
  mysql-data: